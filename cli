#!/usr/bin/env php
<?php
require __DIR__ . '/vendor/autoload.php';

use League\Container\Container;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Dotenv\Dotenv;
use Symfony\Component\Finder\Finder;

const BASE_DIR = __DIR__;
const ROOT_NAMESPACE = 'App\\';
const ROOT_NAMESPACE_PATH = __DIR__ . '/app';
const ENV_FILE = __DIR__ . '/.env';
const CONFIG_PATH = __DIR__ . '/config';

// Init application
$app = new Application();
$container = new Container();
$container->delegate(new \League\Container\ReflectionContainer());
$config = new \Adbar\Dot();

$container->share('app', $app);
$container->share('container', $container)->setAlias(\Psr\Container\ContainerInterface::class);
$container->share('config', $config)->setAlias(\Lib\Contracts\Config::class);

// Load .env file
if (is_file(ENV_FILE)) {
    (new Dotenv())->load(ENV_FILE);
}

// Load config
foreach ((new Finder())->in(CONFIG_PATH)->files()->name('*.php') as $conf) {
    $hive = require $conf->getPathname();
    $key = $conf->getBasename('.php');
    $config->merge($key, $hive);
}

// Register services
foreach ($config['app.providers'] as $class) {
    $container->addServiceProvider($class);
}

// Register commands
foreach ((new Finder())->in(ROOT_NAMESPACE_PATH . '/Commands')->files()->name('*.php') as $command) {
    $class = str_replace(ROOT_NAMESPACE_PATH . '/', '', $command->getPathname());
    $class = str_replace('/', '\\', $class);
    $class = str_replace('.php', '', $class);
    $class = ROOT_NAMESPACE . $class;

    if (is_subclass_of($class, Command::class) && !(new ReflectionClass($class))->isAbstract()) {
        $app->add($container->get($class));
    }
}

// Run command
$app->run();